/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package realestate.domain;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author kinut
 */
public class MainGUI extends javax.swing.JFrame {


    ArrayList<Owner> owners=new ArrayList<>();
    ArrayList<Property> properties=new ArrayList<>();
    ButtonGroup bg=new ButtonGroup();
    ButtonGroup bg2=new ButtonGroup();
    /**
     * Creates new form owner
     */
    public MainGUI() {
        initComponents();
        bg.add(radioSeller);
        bg.add(radioLandlord);
        bg2.add(radioLease);
        bg2.add(radioSale);
        panelSeller.setVisible(false);
        panelLandlord.setVisible(false);
        panelSale.setVisible(false);
        panelLease.setVisible(false);

        //read data from memory
        readOwners();
        readProperties();
        populateOwnerCode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelOwners = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtOwnerCode = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        radioSeller = new javax.swing.JRadioButton();
        radioLandlord = new javax.swing.JRadioButton();
        panelSeller = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtConv = new javax.swing.JTextField();
        panelLandlord = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtBankDetails = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtRent = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        panelProperties = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtStreetAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPropertyCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        radioSale = new javax.swing.JRadioButton();
        radioLease = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        panelSale = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtArea = new javax.swing.JTextField();
        panelLease = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtTenantName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTenantPhone = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtTown = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        comboOwnerCode = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuReset = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        panelOwners.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Full Names");

        jLabel9.setText("Address");

        jLabel10.setText("Owner Code");

        txtOwnerCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOwnerCodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOwnerCodeKeyTyped(evt);
            }
        });

        jLabel11.setText("Type");

        radioSeller.setText("Seller");
        radioSeller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSellerActionPerformed(evt);
            }
        });

        radioLandlord.setText("Landlord");
        radioLandlord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioLandlordActionPerformed(evt);
            }
        });

        panelSeller.setBackground(new java.awt.Color(255, 255, 255));
        panelSeller.setBorder(javax.swing.BorderFactory.createTitledBorder("Seller Properties"));

        jLabel12.setText("Conveyancer");

        javax.swing.GroupLayout panelSellerLayout = new javax.swing.GroupLayout(panelSeller);
        panelSeller.setLayout(panelSellerLayout);
        panelSellerLayout.setHorizontalGroup(
            panelSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSellerLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSellerLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(0, 121, Short.MAX_VALUE))
                    .addComponent(txtConv))
                .addContainerGap())
        );
        panelSellerLayout.setVerticalGroup(
            panelSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSellerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtConv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelLandlord.setBackground(new java.awt.Color(255, 255, 255));
        panelLandlord.setBorder(javax.swing.BorderFactory.createTitledBorder("Landlord Properties"));

        jLabel13.setText("Bank Account Details");

        jLabel14.setText("Rent Per Week");

        txtRent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRentKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelLandlordLayout = new javax.swing.GroupLayout(panelLandlord);
        panelLandlord.setLayout(panelLandlordLayout);
        panelLandlordLayout.setHorizontalGroup(
            panelLandlordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLandlordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLandlordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLandlordLayout.createSequentialGroup()
                        .addGroup(panelLandlordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLandlordLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 92, Short.MAX_VALUE))
                            .addComponent(txtBankDetails))
                        .addGap(25, 25, 25))
                    .addGroup(panelLandlordLayout.createSequentialGroup()
                        .addComponent(txtRent)
                        .addContainerGap())
                    .addGroup(panelLandlordLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelLandlordLayout.setVerticalGroup(
            panelLandlordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLandlordLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBankDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Add Owner");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel15.setText("Add Owner");

        javax.swing.GroupLayout panelOwnersLayout = new javax.swing.GroupLayout(panelOwners);
        panelOwners.setLayout(panelOwnersLayout);
        panelOwnersLayout.setHorizontalGroup(
            panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOwnersLayout.createSequentialGroup()
                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelOwnersLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(panelOwnersLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(55, 55, 55)
                        .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress)
                            .addComponent(txtOwnerCode)
                            .addGroup(panelOwnersLayout.createSequentialGroup()
                                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(panelSeller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radioSeller))
                                .addGap(18, 18, 18)
                                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioLandlord)
                                    .addComponent(panelLandlord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txtName))))
                .addGap(78, 78, 78))
            .addGroup(panelOwnersLayout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelOwnersLayout.setVerticalGroup(
            panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOwnersLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtOwnerCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioSeller)
                    .addComponent(jLabel11)
                    .addComponent(radioLandlord))
                .addGap(18, 18, 18)
                .addGroup(panelOwnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelLandlord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelSeller, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jPanel1.add(panelOwners, "card2");

        panelProperties.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Street Address");

        jLabel2.setText("Property Code");

        txtPropertyCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPropertyCodeKeyTyped(evt);
            }
        });

        jLabel3.setText("Owner Code");

        radioSale.setText("Sale");
        radioSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSaleActionPerformed(evt);
            }
        });

        radioLease.setText("Lease");
        radioLease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioLeaseActionPerformed(evt);
            }
        });

        jLabel4.setText("Type");

        panelSale.setBackground(new java.awt.Color(255, 255, 255));
        panelSale.setBorder(javax.swing.BorderFactory.createTitledBorder("Sale Properties"));

        jLabel5.setText("Price");

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        jLabel18.setText("Area");

        txtArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAreaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelSaleLayout = new javax.swing.GroupLayout(panelSale);
        panelSale.setLayout(panelSaleLayout);
        panelSaleLayout.setHorizontalGroup(
            panelSaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSaleLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelSaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrice)
                    .addComponent(txtArea)
                    .addGroup(panelSaleLayout.createSequentialGroup()
                        .addGroup(panelSaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel18))
                        .addGap(0, 121, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelSaleLayout.setVerticalGroup(
            panelSaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSaleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelLease.setBackground(new java.awt.Color(255, 255, 255));
        panelLease.setBorder(javax.swing.BorderFactory.createTitledBorder("Lease Properties"));

        jLabel6.setText("Tenant Name");

        jLabel7.setText("Tenant Phone");

        javax.swing.GroupLayout panelLeaseLayout = new javax.swing.GroupLayout(panelLease);
        panelLease.setLayout(panelLeaseLayout);
        panelLeaseLayout.setHorizontalGroup(
            panelLeaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLeaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLeaseLayout.createSequentialGroup()
                        .addGroup(panelLeaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLeaseLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 220, Short.MAX_VALUE))
                            .addComponent(txtTenantName))
                        .addGap(25, 25, 25))
                    .addGroup(panelLeaseLayout.createSequentialGroup()
                        .addComponent(txtTenantPhone)
                        .addContainerGap())
                    .addGroup(panelLeaseLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelLeaseLayout.setVerticalGroup(
            panelLeaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLeaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTenantName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTenantPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Add Property");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Add Property");

        jLabel17.setText("Town");

        javax.swing.GroupLayout panelPropertiesLayout = new javax.swing.GroupLayout(panelProperties);
        panelProperties.setLayout(panelPropertiesLayout);
        panelPropertiesLayout.setHorizontalGroup(
            panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPropertiesLayout.createSequentialGroup()
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelPropertiesLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(74, 74, 74))
                    .addGroup(panelPropertiesLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(55, 55, 55)
                        .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPropertiesLayout.createSequentialGroup()
                                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(panelSale, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radioSale, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioLease)
                                    .addComponent(panelLease, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(panelPropertiesLayout.createSequentialGroup()
                                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboOwnerCode, javax.swing.GroupLayout.Alignment.LEADING, 0, 216, Short.MAX_VALUE)
                                    .addComponent(txtPropertyCode, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStreetAddress, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(33, 33, 33)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTown)))))
                .addContainerGap())
            .addGroup(panelPropertiesLayout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPropertiesLayout.setVerticalGroup(
            panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPropertiesLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtStreetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(txtTown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPropertyCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboOwnerCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioSale)
                    .addComponent(jLabel4)
                    .addComponent(radioLease))
                .addGap(18, 18, 18)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelLease, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelSale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel1.add(panelProperties, "card2");

        jMenu1.setText("File");

        jMenuItem1.setText("Property Owners");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Property");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        menuReset.setText("Reset");
        menuReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuResetActionPerformed(evt);
            }
        });
        jMenu1.add(menuReset);

        jMenuItem3.setText("Generate Sale Properties Report");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Generate Rental Properties Report");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        menuExit.setText("Exit Application");
        jMenu1.add(menuExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        panelOwners.setVisible(true);
        panelProperties.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        panelOwners.setVisible(false);
        panelProperties.setVisible(true);
        populateOwnerCode();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void populateOwnerCode(){
        for(Owner owner:owners){
            comboOwnerCode.addItem(String.valueOf(owner.getOwnerID()));
        }
    }

    private void menuResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuResetActionPerformed
        readOwners();
        readProperties();
        populateOwnerCode();
    }//GEN-LAST:event_menuResetActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String name=txtName.getText();
        String address=txtAddress.getText();
        String code=txtOwnerCode.getText();
        if(radioSeller.isSelected()){ //adding a seller
            String conv=txtConv.getText();
            Owner owner=new Seller(name,address,Integer.parseInt(code),conv);
            owners.add(owner);
            JOptionPane.showMessageDialog(panelOwners, "Seller added successfully");

        }else{//adding a landlord
            String bankDetails=txtBankDetails.getText();
            String rent=txtRent.getText();
            Owner owner=new Landlord(name,address,Integer.parseInt(code),bankDetails,Double.parseDouble(rent));
            owners.add(owner);
            JOptionPane.showMessageDialog(panelOwners, "Landlord added successfully");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void validateNum(KeyEvent evt,String input){
    	Character c=evt.getKeyChar();
    	if(!(Character.isDigit(c))&&(c != KeyEvent.VK_BACK_SPACE)&&(c != KeyEvent.VK_DELETE) && (c !=KeyEvent.VK_ENTER)){
            evt.consume();
            JOptionPane.showMessageDialog(null, "Make use of numbers only!!");
    	}
    }
    private boolean isNumber(String input){
        try{
            Double.parseDouble(input);
            return true;
        }catch(NumberFormatException e){
            return false;
        }
    }

    private void radioSellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSellerActionPerformed
        panelSeller.setVisible(true);
        panelLandlord.setVisible(false);
    }//GEN-LAST:event_radioSellerActionPerformed

    private void radioLandlordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioLandlordActionPerformed
        panelSeller.setVisible(false);
        panelLandlord.setVisible(true);
    }//GEN-LAST:event_radioLandlordActionPerformed

    private void txtOwnerCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOwnerCodeKeyPressed

    }//GEN-LAST:event_txtOwnerCodeKeyPressed

    private void txtOwnerCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOwnerCodeKeyTyped
        validateNum(evt,txtOwnerCode.getText());
    }//GEN-LAST:event_txtOwnerCodeKeyTyped

    private void txtRentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRentKeyTyped
        validateNum(evt,txtRent.getText());
    }//GEN-LAST:event_txtRentKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String streetAddress=txtStreetAddress.getText();
        String town=txtTown.getText();
        String propertyCode=txtPropertyCode.getText();
        Owner owner=owners.get(comboOwnerCode.getSelectedIndex());
        if(radioSale.isSelected()){//Sale property
            String price=txtPrice.getText();
            String area=txtArea.getText();
            Property property=new SaleProperty(streetAddress,town,Integer.parseInt(propertyCode),owner,Integer.parseInt(price),Double.parseDouble(area));
            properties.add(property);
            JOptionPane.showMessageDialog(panelOwners, "Sale Property added successfully");
        }else{//lease property
            String tenantPhone=txtTenantPhone.getText();
            String tenantName=txtTenantName.getText();
            Property property=new RentalProperty(streetAddress,town,Integer.parseInt(propertyCode),owner,tenantName,tenantPhone);
            properties.add(property);
            JOptionPane.showMessageDialog(panelOwners, "Lease Property added successfully");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void radioSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSaleActionPerformed
        panelSale.setVisible(true);
        panelLease.setVisible(false);
    }//GEN-LAST:event_radioSaleActionPerformed

    private void radioLeaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioLeaseActionPerformed
        panelSale.setVisible(false);
        panelLease.setVisible(true);
    }//GEN-LAST:event_radioLeaseActionPerformed

    private void txtPropertyCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPropertyCodeKeyTyped
        validateNum(evt,txtPropertyCode.getText());
    }//GEN-LAST:event_txtPropertyCodeKeyTyped

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        validateNum(evt,txtPrice.getText());
    }//GEN-LAST:event_txtPriceKeyTyped

    private void txtAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAreaKeyTyped
        validateNum(evt,txtArea.getText());
    }//GEN-LAST:event_txtAreaKeyTyped

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        String amount=JOptionPane.showInputDialog("Enter the dollar amount for the property Sale");
        while(!isNumber(amount)){
            amount=JOptionPane.showInputDialog("Enter the dollar amount");
        }
        ArrayList<SaleProperty> results=new ArrayList<>();
        for(Property property: properties){
            if(property instanceof SaleProperty){
                SaleProperty sp=(SaleProperty)property;
                if(sp.getPrice()>=Integer.parseInt(amount)){
                    results.add(sp);
                }
            }
        }
        saveSaleResults("saleresults.csv",results,"SALE PROPERTY RESULTS FOR ALL PROPERTIES EQUAL OR GREATER TO $ "+amount);
        JOptionPane.showMessageDialog(panelOwners, "Report generated and saved to a file");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        String town=JOptionPane.showInputDialog("Enter a town for which a rental property");
        while(town.length()==0){
            town=JOptionPane.showInputDialog("Enter a town for a rental property");
        }
        ArrayList<RentalProperty> results=new ArrayList<>();
        for(Property property: properties){
            if(property instanceof RentalProperty){
                RentalProperty sp=(RentalProperty)property;
                if(sp.getTown().equalsIgnoreCase(town)){
                    results.add(sp);
                }
            }
        }
        saveLeaseResults("leaseresults.csv",results,"RENTAL PROPERTY RESULTS FOR ALL RENTAL PROPERTIES IN "+town.toUpperCase());
        JOptionPane.showMessageDialog(panelOwners, "Report generated and saved to a file");
    }//GEN-LAST:event_jMenuItem4ActionPerformed


    public void saveLeaseResults(String filename, ArrayList<RentalProperty> data,String title) {
        BufferedWriter bw = null;
        FileWriter fw = null;

        try {
            File file = new File("./"+filename);

            // if file doesnt exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            } else {//recreate the file
                file.delete();
                file.createNewFile();
            }
            // true = append file
            fw = new FileWriter(file.getAbsoluteFile(), true);
            bw = new BufferedWriter(fw);
            bw.write("\n"+title);
            for (int i = 0; i < data.size(); i++) {
                bw.write("\n"+data.get(i).toString());
            }
        } catch (IOException e) {

            System.out.println(e.getMessage());

        } finally {

            try {

                if (bw != null) {
                    bw.close();
                }

                if (fw != null) {
                    fw.close();
                }

            } catch (IOException ex) {

                ex.printStackTrace();

            }
        }
    }

    public void saveSaleResults(String filename, ArrayList<SaleProperty> data,String title) {
        BufferedWriter bw = null;
        FileWriter fw = null;

        try {
            File file = new File("./"+filename);

            // if file doesnt exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            } else {//recreate the file
                file.delete();
                file.createNewFile();
            }
            // true = append file
            fw = new FileWriter(file.getAbsoluteFile(), true);
            bw = new BufferedWriter(fw);
            bw.write("\n"+title);
            for (int i = 0; i < data.size(); i++) {
                bw.write("\n"+data.get(i).toString());
            }
        } catch (IOException e) {

            System.out.println(e.getMessage());

        } finally {

            try {

                if (bw != null) {
                    bw.close();
                }

                if (fw != null) {
                    fw.close();
                }

            } catch (IOException ex) {

                ex.printStackTrace();

            }
        }
    }

    private void saveToFile(String title,ArrayList<SaleProperty> results){

    }

    private void readOwners(){
        try {
            String[] temp=readFile("./owners.csv");
            for(int i=1;i<temp.length;i++){
                String[] line=temp[i].split(",");
                if(line[3].equals("1")){//seller
                    Owner seller=new Seller(line[0],line[1],Integer.parseInt(line[2]),line[4]);
                    owners.add(seller);
                }else{//landlord
                    Owner landlord=new Landlord(line[0],line[1],Integer.parseInt(line[2]),line[4],Double.parseDouble(line[5]));
                    owners.add(landlord);
                }
            }

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(panelOwners, ex.getMessage());
        }
    }

    private Owner getOwner(int uid){
        for(Owner owner:owners){
            if(owner.getOwnerID()==uid){
                return owner;
            }
        }
        return null;
    }

    private void readProperties(){
        try{
            String[] temp=readFile("./properties.csv");
            for(int i=1;i<temp.length;i++){
                String[] line=temp[i].split(",");
                if(line[3].equals("1")){//sale
                    Property saleProperty=new SaleProperty(line[0],line[1],Integer.parseInt(line[2]),getOwner(Integer.parseInt(line[3])),Integer.parseInt(line[5]),Double.parseDouble(line[6]));
                    properties.add(saleProperty);
                }else{//lease
                    Property rentalProperty=new RentalProperty(line[0],line[1],Integer.parseInt(line[2]),getOwner(Integer.parseInt(line[3])),line[5],line[6]);
                    properties.add(rentalProperty);
                }
            }
        }catch(IOException ex){
            JOptionPane.showMessageDialog(panelOwners, ex.getMessage());
        }
    }

    public String[] readFile(String filename) throws IOException {
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(filename));
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();
            while (line != null) {
                sb.append(line);
                sb.append("\n");
                line = br.readLine();
            }
            String everything = sb.toString();
            String[] blocks = everything.split("\n");
            return blocks;
        } catch (Exception e) {
            e.printStackTrace();
            return null;

        } finally {
            br.close();
        }

    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboOwnerCode;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuReset;
    private javax.swing.JPanel panelLandlord;
    private javax.swing.JPanel panelLease;
    private javax.swing.JPanel panelOwners;
    private javax.swing.JPanel panelProperties;
    private javax.swing.JPanel panelSale;
    private javax.swing.JPanel panelSeller;
    private javax.swing.JRadioButton radioLandlord;
    private javax.swing.JRadioButton radioLease;
    private javax.swing.JRadioButton radioSale;
    private javax.swing.JRadioButton radioSeller;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtArea;
    private javax.swing.JTextField txtBankDetails;
    private javax.swing.JTextField txtConv;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtOwnerCode;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPropertyCode;
    private javax.swing.JTextField txtRent;
    private javax.swing.JTextField txtStreetAddress;
    private javax.swing.JTextField txtTenantName;
    private javax.swing.JTextField txtTenantPhone;
    private javax.swing.JTextField txtTown;
    // End of variables declaration//GEN-END:variables
}
